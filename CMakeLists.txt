project(pop)
cmake_minimum_required(VERSION 2.8)
option(CodeCoverage "CodeCoverage" ON)
set(CMAKE_CXX_FLAGS "-std=c++11 -Wno-deprecated-register ${CMAKE_CXX_FLAGS}")
set(CMAKE_CXX_FLAGS_DEBUG "-std=c++11 -Wno-deprecated-register -O0 -g -fprofile-arcs -ftest-coverage ${CMAKE_CXX_FLAGS_DEBUG}")
set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/modules/)

add_subdirectory(tests)
add_subdirectory(vendor)

add_executable(pop main.cpp)
target_link_libraries(pop LINK_PUBLIC vendor)

set(CMAKE_BUILD_TYPE Debug)
message("Building type : ${CMAKE_BUILD_TYPE}")
if (CMAKE_BUILD_TYPE MATCHES Debug)
if (CodeCoverage MATCHES ON)
message("Running with COdeCoverage")
include(CodeCoverage)
setup_target_for_coverage(${PROJECT_NAME}_coverage poptests coverage)
setup_target_for_coverage_cobertura(${PROJECT_NAME}_cobertura poptests coverage --gtest_output=xml:coverage.junit.xml)
endif(CodeCoverage MATCHES ON)
endif(CMAKE_BUILD_TYPE MATCHES Debug)
